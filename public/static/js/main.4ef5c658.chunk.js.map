{"version":3,"sources":["components/CitySearch.jsx","components/Weather.jsx","components/SearchCard.jsx","components/SavedSearches.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CitySearch","props","useState","inputText","setInputText","getWeather","className","onSubmit","e","preventDefault","onChange","target","value","type","name","id","placeholder","size","icon","faSearch","Weather","weather","saveSearch","main","temp","humidity","onClick","weatherObject","city","saveHandler","faSave","SearchCard","search","deleteSearch","createdAtTime","created_at","faTrashAlt","format","date","SavedSearches","savedSearches","getSearches","useEffect","length","map","App","alert","useAlert","setWeather","setSavedSearches","str","a","axios","get","params","q","units","catch","err","Error","response","data","resp","show","post","weatherId","URL","delete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","alertOptions","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","types","ERROR","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.4ef5c658.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction CitySearch(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const { getWeather } = props;\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    getWeather(inputText);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col mt-4\">\r\n      <h2 className=\"fw-bold fs-5\">Search for a City</h2>\r\n\r\n      <form onSubmit={formSubmitHandler} className=\"search-form\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={inputTextHandler}\r\n            type=\"text\"\r\n            name=\"city-search\"\r\n            id=\"city-search\"\r\n            placeholder=\"City Name\"\r\n            value={inputText}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            <FontAwesomeIcon size=\"1x\" icon={faSearch} /> Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitySearch;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Weather(props) {\r\n  const { weather, saveSearch } = props;\r\n\r\n  const saveHandler = (weather) => {\r\n    const weatherObject = {\r\n      city: weather.name,\r\n      temp: weather.main.temp,\r\n      humidity: weather.main.humidity,\r\n    };\r\n\r\n    saveSearch(weatherObject); // send to backend\r\n  };\r\n\r\n  return (\r\n    <div className=\"col mt-4\">\r\n      <h2 className=\"fw-bold fs-5\">Current Weather</h2>\r\n      <div className=\"card\">\r\n        {weather.name ? (\r\n          <div className=\"weather-data p-3 text-center\">\r\n            <h2>{weather.name}</h2>\r\n            <h3>{weather.main.temp}&deg;F</h3>\r\n            <h3>Humidity : {weather.main.humidity}%</h3>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => saveHandler(weather)}\r\n            >\r\n              <FontAwesomeIcon size=\"1x\" icon={faSave} /> Save\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <h3 className=\"text-center p-3 fs-5 text-muted\">\r\n            Search for a city to view current conditions\r\n          </h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import Moment from \"react-moment\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nfunction SearchCard(props) {\r\n  const { search, deleteSearch } = props;\r\n  const createdAtTime = search.created_at;\r\n  return (\r\n    <div className=\"col-xs-12 col-sm-6 col-md-4\">\r\n      <div className=\"card mb-3 p-3\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h4> {search.city}</h4>\r\n          <button\r\n            className=\"btn btn-outline-danger\"\r\n            onClick={() => {\r\n              deleteSearch(search.id);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" />\r\n          </button>\r\n        </div>\r\n        <h4> {search.temp}&deg;F</h4>\r\n        <h4>Humidity : {search.humidity}%</h4>\r\n        <h6>\r\n          <Moment format={\"MM/DD/YYYY hh:mm:ss\"} date={createdAtTime} />\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchCard;\r\n","import SearchCard from \"./SearchCard\";\r\nimport { useEffect } from \"react\";\r\nfunction SavedSearches(props) {\r\n  const { savedSearches, deleteSearch, getSearches } = props;\r\n\r\n  useEffect(() => {\r\n    getSearches();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row mt-4 previous-searches\">\r\n      <h2 className=\"fw-bold fs-5\">Saved Searches</h2>\r\n      {savedSearches.length > 0\r\n        ? savedSearches.map((search) => {\r\n            return (\r\n              <SearchCard\r\n                deleteSearch={deleteSearch}\r\n                search={search}\r\n                key={search.id}\r\n              />\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedSearches;\r\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport CitySearch from \"./components/CitySearch\";\nimport Weather from \"./components/Weather\";\nimport SavedSearches from \"./components/SavedSearches\";\nimport \"./styles/app.scss\";\nimport { useAlert } from \"react-alert\";\n\nfunction App() {\n  const alert = useAlert();\n  const [weather, setWeather] = useState({});\n  const [savedSearches, setSavedSearches] = useState([]);\n\n  const getWeather = async (str) => {\n    const URL = `/api/weather`;\n    try {\n      const resp = await axios\n        .get(URL, {\n          params: {\n            q: str,\n            units: \"imperial\",\n          },\n        })\n        .catch((err) => {\n          throw new Error(\n            err.response?.data || `Unknown error. Please try again.`\n          );\n        });\n      setWeather(resp.data);\n    } catch (err) {\n      alert.show(`${err}`);\n    }\n  };\n\n  const getSearches = async () => {\n    const URL = `/api/weather/saved`;\n    try {\n      const resp = await axios.get(URL).catch((err) => {\n        throw new Error(\n          err.response?.data || `Unknown error. Please try again.`\n        );\n      });\n      setSavedSearches([...resp.data]);\n    } catch (err) {\n      alert.show(`${err}`);\n    }\n  };\n\n  const saveSearch = async (weatherObject) => {\n    const URL = `/api/weather/save`;\n    try {\n      const resp = await axios.post(URL, weatherObject).catch((err) => {\n        throw new Error(\n          err.response?.data || `Unknown error. Please try again.`\n        );\n      });\n      getSearches();\n      setWeather(\"\");\n    } catch (err) {\n      alert.show(`${err}`);\n    }\n  };\n\n  const deleteSearch = async (weatherId) => {\n    const URL = `/api/weather/delete/${weatherId}`;\n    try {\n      const resp = await axios\n        .delete(URL, { data: { weatherId } })\n        .catch((err) => {\n          throw new Error(\n            err.response?.data || `Unknown error. Please try again.`\n          );\n        });\n      getSearches();\n    } catch (err) {\n      alert.show(`${err}`);\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"fw-bold fs-4\">Weather App</h1>\n      <div className=\"App container\">\n        <div className=\"row\">\n          <CitySearch getWeather={getWeather} />\n        </div>\n\n        <div className=\"row\">\n          <Weather\n            weather={weather}\n            savedSearches={savedSearches}\n            setSavedSearches={setSavedSearches}\n            saveSearch={saveSearch}\n          />\n        </div>\n\n        <SavedSearches\n          deleteSearch={deleteSearch}\n          savedSearches={savedSearches}\n          setSavedSearches={setSavedSearches}\n          getSearches={getSearches}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  transitions,\n  positions,\n  types,\n  Provider as AlertProvider,\n} from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\n// alert configuration\nconst alertOptions = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  transition: transitions.SCALE,\n  type: types.ERROR,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...alertOptions}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}